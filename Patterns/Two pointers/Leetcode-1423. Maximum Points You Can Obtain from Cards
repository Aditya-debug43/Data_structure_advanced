/*
logic using circular method
int maxScore(int* cardPoints, int cardPointsSize, int k) {
int left=cardPointsSize-k;
int right=cardPointsSize-1;
int sum=0;
int maxsum=0;
for(int i=left;i<=right;i++)
    sum+=cardPoints[i];
if(left==0)
return sum;
int time=k;
int times=0;
while(times<=k)
{
    if(maxsum<sum)
    maxsum=sum;
    right=(right+1)%cardPointsSize;
    sum+=cardPoints[right];
    sum-=cardPoints[left];
    left=(left+1)%cardPointsSize;
    times++;
}
return maxsum;
}
*/
// Normal logic
int maxScore(int* cardPoints, int cardPointsSize, int k) {
    int sum = 0;
    for (int i = 0; i < k; i++)
        sum += cardPoints[i];
    int maxSum = sum;

    for (int i = 0; i < k; i++) {
        sum = sum - cardPoints[k - 1 - i] + cardPoints[cardPointsSize - 1 - i];
        if (sum > maxSum)
            maxSum = sum;
    }
    return maxSum;
}
